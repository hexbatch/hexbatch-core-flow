<div class="container p-0 m-1 mb-3">

    <div class="card" style="">

        <h5 class="card-title">
            Import and Export For {{ project.flow_project_title }}
        </h5>

        <div class="card-body flow-import-export-settings" >
            <div class="row">

                <div class="col-4 md-col-3">
                    {% if project.get_current_user_permissions().can_edit %}
                        <div class="d-inline-block">
                            <button type="button"
                                    class="btn btn-outline-primary py-0 flow-git-pull-now"
                                    data-url="{{ url_for('pull_project_ajax',{
                                        user_name: project.get_admin_user().flow_user_name ,
                                        project_name: project.flow_project_title
                                    } )
                                    }}"
                            >
                                Pull Now
                            </button>
                        </div>
                    {% endif %} {# end can-edit #}
                </div> <!--.col  -->

                <div class="col-4 md-col-3">
                    {% if project.get_current_user_permissions().can_read %}
                        <div class="" aria-current="page">
                            <a href="{{ url_for('download_project_export',{
                                user_name: project.get_admin_user().flow_user_name ,
                                project_name: project.flow_project_title
                            } )
                            }}"
                               class="btn btn-outline-info py-0"
                            >
                                Download as Zip
                            </a>
                        </div>
                    {% endif %} {# end can-read #}
                </div> <!-- .col -->



                <div class="col-4 md-col-3">
                    {% if project.get_current_user_permissions().can_edit %}
                        <div class="d-inline-block">
                            <button type="button"
                                    class="btn btn-outline-primary py-0 flow-git-push-now"
                                    data-url="{{ url_for('push_project_ajax',{
                                        user_name: project.get_admin_user().flow_user_name ,
                                        project_name: project.flow_project_title
                                    } )
                                    }}"
                            >
                                Push Now
                            </button>
                        </div>
                    {% endif %} {# end can-edit #}
                </div> <!--.col  -->

            </div> <!-- .row -->
        </div> <!-- .card-body -->



        <div class="card-body flow-import-export-settings" >
            <div class="row">
                <div class="col-12 col-md-6">
                    <div class="flow-git-import-here"></div>
                </div>
                <div class="col-12 col-md-6 mt-2 mt-md-0">
                    <div class="flow-git-export-here"></div>
                </div>
            </div>
        </div> <!-- card-body -->
    </div> <!-- card -->
</div> <!-- container -->

<script>
    jQuery(function($) {
        let parent = $(`div.flow-import-export-settings`);
        let git_tags = will_echo_tag_array({{ git_tags|to_json_string }});


        let import_setting_place = parent.find(`.flow-git-import-here`);
        let git_import_tag_setting = will_echo_tag_array([{{git_import_tag_setting|to_json_string}}])[0];

        let import_setting_params = {
            tag_list: git_tags,
            standard_name: "{{ constant('app\\models\\standard\\IFlowTagStandardAttribute::STD_ATTR_NAME_GIT') }}",
            setting_name: "{{ constant('app\\models\\project\\FlowProject::GIT_IMPORT_SETTING_NAME') }}",
            tag_setting: git_import_tag_setting,
            setting_label: "Git Import",
            setting_description : "For importing changes from git to a project",
            on_change_callback: function (ret) {
                console.log('on change import',ret);
                let tag_guid = null;
                if (ret.chosen_tag) { tag_guid = ret.chosen_tag.flow_tag_guid;}
                flow_set_project_setting(ret.setting_name,tag_guid,
                    function(back) {
                        console.log("import got back",back);
                    },
                    function(err) {
                        console.error("import got error",err);
                    },
                )
            },
            on_cancel_callback: function (ret) {
                console.log('on cancel import',ret);
            }
        };

        let import_jquery = make_flow_standard_selection_control(import_setting_params);
        import_setting_place.append(import_jquery);



        let export_setting_place = parent.find(`.flow-git-export-here`);
        let git_export_tag_setting = will_echo_tag_array([{{git_export_tag_setting|to_json_string}}])[0];

        let export_setting_params = {
            tag_list: git_tags,
            standard_name: "{{ constant('app\\models\\standard\\IFlowTagStandardAttribute::STD_ATTR_NAME_GIT') }}",
            setting_name: "{{ constant('app\\models\\project\\FlowProject::GIT_EXPORT_SETTING_NAME') }}",
            tag_setting: git_export_tag_setting,
            setting_label: "Git Export",
            setting_description : "For Exporting project changes to git ",
            on_change_callback:
                /**
                 *
                 * @param {FlowStandardSettingCallbackParams} ret
                 */
                function (ret) {
                    console.log('on change export',ret);
                    let tag_guid = null;
                    if (ret.chosen_tag) { tag_guid = ret.chosen_tag.flow_tag_guid;}
                    flow_set_project_setting(ret.setting_name,tag_guid,
                        function(back) {
                            console.log("export got back",back);
                        },
                        function(err) {
                            console.error("export got error",err);
                        },
                )
            },
            on_cancel_callback: function (ret) {
                console.log('on cancel export',ret);
            }
        };

        let export_jquery = make_flow_standard_selection_control(export_setting_params);
        export_setting_place.append(export_jquery);
    });
</script>