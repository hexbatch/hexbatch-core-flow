/**
 *
 * @param {FlowTag} tag
 * @param {?FlowStandardCallback} success_callback
 * @param {?FlowStandardCallback} fail_callback
 */
function edit_standard_meta(tag,success_callback,fail_callback) {
    if (!tag.standard_attributes.hasOwnProperty('meta')) { return jQuery('<span>No Meta Found</span>');}

    /**
     * @type {StandardMeta} meta
     */
    let meta = tag.standard_attributes.meta;


    let card = $("div#standard-meta-edit-templates > div.standard-meta-card ").clone();
    let title_tag = card.find('.flow-edit-this-meta-tag');
    title_tag.text(tag.flow_tag_name);
    title_tag.data('tag_guid', tag.flow_tag_guid);

    for(let prop in meta) {
        if (!meta[prop]) {continue;}
        card.find(`input[name=${prop}]`).val(meta[prop]);
    }

    let date_time_holder = card.find(`input[name=meta_date_time]`);
    let date_picker = card.find(`input[name=meta_date_time_picker]`);
    date_picker.val(meta.meta_date_time);

    // noinspection JSUnresolvedVariable
    new tempusDominus.TempusDominus(date_picker[0],{
        display : {
            buttons : {
                today : true ,
                clear : true
            }
        }
    });

    date_picker.on('change.td', (e) => {
        if (e.isClear) {
            date_time_holder.val('');
        } else {
            date_time_holder.val(e.date.toISOString())
        }


    })


    let save_button = card.find(`button.action-meta-save`);
    save_button.on('click',function() {
        for(let prop in meta) {
            let val = card.find(`input[name=${prop}]`).val();
            if (!val) {val = null;}
            meta[prop] = val;
        }
        console.debug('got saved meta as ',meta);


        let data_no_no_callback = function(data) {

            if (!fail_callback) {
                data_no_no_callback = function(what) {
                    console.error('failed',what);
                }
            }
            if (fail_callback) fail_callback(data);
        }

        let dat_ok_callback = function(data) {
            if (!success_callback) {
                dat_ok_callback = function(what) {
                    console.debug('success',what);
                }
            }
            if (success_callback) success_callback(data);
        }

        flow_update_standard(tag,'meta',meta,dat_ok_callback,data_no_no_callback);

    });



    return card;

}